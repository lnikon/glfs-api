---
openapi: 3.0.0
info:
  title: Swagger Petstore
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://virtserver.swaggerhub.com/vagag/GraphLibraryService/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: pet
  description: Everything about your Pets
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: store
  description: Access to Petstore orders
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
paths:
  /computation:
    post:
      summary: Start new graph computation
      operationId: startComputation
      requestBody:
        description: A description of the computation that needs to be performed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Computation'
        required: true
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
components:
  schemas:
    Computation:
      required:
      - algorithm
      - graph
      type: object
      properties:
        algorithm:
          type: string
        graph:
          $ref: '#/components/schemas/Graph'
    Graph:
      required:
      - graph
      properties:
        graph:
          type: string
          example: a 1 b 2 c 2
      description: Serilized graph on which the computation should be performed
  requestBodies:
    Computation:
      description: Description of the computation that should be performed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Computation'
      required: true
